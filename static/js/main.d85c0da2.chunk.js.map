{"version":3,"sources":["Components/card/Card.jsx","Components/card-list/CardList.jsx","Components/search-box/SearchBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","console","log","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchFiled","target","value","state","fetch","then","result","json","user","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAGe,SAASA,EAAKC,GACzB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,gBACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,W,MCJf,SAASC,EAASR,GAG7B,OADAS,QAAQC,IAAIV,GAER,qBAAKC,UAAU,YAAf,SAEKD,EAAMW,SAASC,KAAI,SAAAR,GAAO,OAAI,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,S,MCP/C,SAASQ,EAAT,GAAgD,IAA5BC,EAA2B,EAA3BA,YAAYC,EAAe,EAAfA,aAC3C,OAEQ,uBACEC,KAAK,SACLf,UAAY,SACZa,YAAcA,EACdG,SAAUF,I,ICLHG,E,kDACnB,aAAe,IAAD,8BACZ,gBAaFH,aAAe,SAACI,GAAD,OAAO,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAZ1D,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAJH,E,gEAQO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAYA,EAAOC,UACxBF,MAAK,SAACG,GAAD,OAAU,EAAKT,SAAS,CAAET,SAAUkB,S,+BAKpC,IAAD,EAC2BC,KAAKN,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACZU,EAAmBpB,EAASqB,QAAO,SAAC5B,GAAD,OACvCA,EAAQE,KAAK2B,cAAcC,SAASb,EAAYY,kBAGlD,OACE,sBAAKhC,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEa,YAAY,oBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUJ,SAAUoB,W,GA9BKI,aCOlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d85c0da2.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./Card.css\";\r\n\r\nexport default function Card(props) {\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&`}/>\r\n            <h2>{props.monster.name}</h2>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n \r\n","import React from 'react';\r\nimport Card from '../card/Card';\r\nimport \"./CardList.css\";\r\n\r\nexport default function CardList(props) {\r\n\r\n    console.log(props);\r\n    return (\r\n        <div className=\"card-list\">\r\n            \r\n            {props.monsters.map(monster=> (<Card key={monster.id} monster={monster}/>))}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport './SearchBox.css';\r\n\r\nexport default function SearchBox({placeholder,handleChange}) {\r\n    return (\r\n       \r\n            <input \r\n              type=\"search\" \r\n              className = \"search\"\r\n              placeholder ={placeholder}\r\n              onChange={handleChange}\r\n              />\r\n        \r\n    )\r\n}\r\n\r\n\r\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport CardList from \"./Components/card-list/CardList\";\nimport SearchBox from \"./Components/search-box/SearchBox\";\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchFiled: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((result) => result.json())\n      .then((user) => this.setState({ monsters: user }));\n  }\n\n  handleChange = (e) => this.setState({ searchFiled: e.target.value });\n\n  render() {\n    const { monsters, searchFiled } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchFiled.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Monster Roladex</h1>\n        <SearchBox\n          placeholder=\"Search Monster !!\"\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}